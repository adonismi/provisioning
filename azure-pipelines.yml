# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Acceptation
  jobs:
  - job: AcceptationEnvironment
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: install
      inputs:
        terraformVersion: '0.12.3'

    - task: TerraformTaskV2@2
      displayName: init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        backendServiceArm: 'azure-spn'
        backendAzureRmResourceGroupName: 'terraform-rg'
        backendAzureRmStorageAccountName: 'adonisterraformstorage'
        backendAzureRmContainerName: 'adonisterraformcontainer'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV2@2
      displayName: 'validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'

    - task: TerraformTaskV2@2
      displayName: 'plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        environmentServiceNameAzureRM: 'azure-spn'

    - task: TerraformTaskV2@2
      displayName: 'apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        environmentServiceNameAzureRM: 'azure-spn'