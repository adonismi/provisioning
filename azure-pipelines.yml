trigger:
- master

stages:
- stage: Acceptation
  jobs:
  - job: Acceptation
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: install
      inputs:
        terraformVersion: '1.0.9'

    - task: TerraformTaskV2@2
      displayName: init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'Terraform/'
        commandOptions: '-reconfigure'
        backendServiceArm: 'azure-spn'
        backendAzureRmResourceGroupName: 'terraform-rg'
        backendAzureRmStorageAccountName: 'adonisterraformstorage'
        backendAzureRmContainerName: 'adonisterraformcontainer'
        backendAzureRmKey: 'terraform.tfstate'
    - task: TerraformTaskV2@2
      displayName: 'validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: 'Terraform/'

    - task: TerraformTaskV2@2
      displayName: 'plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: 'Terraform/'
        environmentServiceNameAzureRM: 'azure-spn'

    - task: TerraformTaskV2@2
      displayName: 'apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'Terraform/'
        environmentServiceNameAzureRM: 'azure-spn'


    - task: MavenAuthenticate@0
      displayName: 'Maven Authenticate'
      inputs:
        artifactsFeeds: 'adonisprovisioning'

    - task: Maven@3
      displayName: 'Maven package'
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: PublishPipelineArtifact@1
      displayName: 'Publish .jar'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'petclinic.jar'
        publishLocation: 'pipeline'

    - task: DownloadPipelineArtifact@2
      displayName: 'Download .jar'
      inputs:
        buildType: 'current'
        artifactName: 'petclinic.jar'
        itemPattern: '**/**.jar'
        targetPath: '$(Pipeline.Workspace)'

    - task: DockerInstaller@0
      displayName: 'Install Docker Pipeline'
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      displayName: 'Build&Push Dockerhub'
      inputs:
        containerRegistry: 'Dockerhub'
        repository: 'adonismi/provisioning'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Pipeline.Workspace)'
        tags: 'pipeline'


    - task: SSH@0
      displayName: 'Install Ansible'
      inputs:
        sshEndpoint: 'Terraform AzureVM SSH -m PEM'
        runOptions: 'commands'
        commands: |
          sudo yum -y install epel-release
          sudo yum -y install ansible
        readyTimeout: '20000'
        failOnStdErr: false

    - task: Ansible@0
      displayName: 'Ansible Playbook'
      inputs:
        ansibleInterface: 'remoteMachine'
        connectionOverSsh: 'Terraform AzureVM SSH -m PEM'
        playbookSourceRemoteMachine: 'agentMachine'
        playbookRootRemoteMachine: 'Ansible/'
        playbookPathLinkedArtifactOnRemoteMachine: 'provisioning'
        inventoriesRemoteMachine: 'inlineContent'
        inventoryInlineContentRemoteMachine: 'localhost ansible_connection=local'
        failOnStdErr: false
    - task: SSH@0
      displayName: 'Docker Pull&Run'
      inputs:
        sshEndpoint: 'Terraform AzureVM SSH -m PEM'
        runOptions: 'commands'
        commands: |
          sudo docker pull adonismi/provisioning:latest
          sudo docker run -d -p 8080:8080 --name=petclinic adonismi/provisioning:pipeline
        readyTimeout: '20000'
        failOnStdErr: false

    - task: CmdLine@2
      displayName: 'Delay + Curl Petclinic'
      inputs:
        script: |
          ping google.com -c 20
          curl 20.73.45.11:8080

    - task: TerraformTaskV2@2
      displayName: 'Destruction'
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
        environmentServiceNameAzureRM: 'azure-spn'